# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <nate_marti@sil.org>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-18 18:45+0100\n"
"PO-Revision-Date: 2025-05-18 16:52+0100\n"
"Last-Translator: Nate Marti <nate_marti@sil.org>\n"
"Language-Team: Nate Marti <nate_marti@sil.org>\n"
"Language: English\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: networkpuzzles.kv:15
msgid "Menu"
msgstr ""

#: networkpuzzles.kv:19
msgid "Test"
msgstr ""

#: networkpuzzles.kv:24
msgid "?"
msgstr ""

#: networkpuzzles.kv:111
msgid "Error"
msgstr ""

#: networkpuzzles.kv:136
msgid "Quit"
msgstr ""

#: messages.py:5
msgid "Bad Power Supply"
msgstr ""

#: messages.py:6
msgid ""
"Occasionally a piece of hardware will break, This often happens after long "
"periods of use, though sometimes after just sitting around unused.\n"
"\n"
"This puzzle makes it look a little worse than it usually would look.  Go "
"ahead and turn on the switch.  After that, right-click and replace it.\n"
"\n"
"Things that have been replaced will need to have their settings put back.  "
"So make sure to give the new switch a good IP and gateway."
msgstr ""

#: messages.py:9
msgid "Network Loop"
msgstr ""

#: messages.py:10
msgid ""
"This puzzle shows you what happens when you create a network loop.  A loop "
"is made when you have your switches connected to themselves or to another "
"one that is connected back to the first one.  Ping from pc0 to pc1 to see "
"what happens.  You do not need to fix the problem, but right-clicking one of "
"the switches and removing one of the offending links would do it."
msgstr ""

#: messages.py:13
msgid "Network Loop 2"
msgstr ""

#: messages.py:14
msgid ""
"Managed Switches can use Spanning Tree, which intelligently figures out the "
"least distance path to a point.  It is made so you can have network loops "
"and survive.  Try pinging pc1 twice from pc0.  The first time, some packets "
"are lost.  But the second time the packet goes where it should."
msgstr ""
